openapi: 3.0.2
info:
  title: Dinagon
  description: Server Side Api
  version: 0.1 alpha
paths:
  "/login":
    post:
      summary: Login
      operationId: login_login_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/login/refresh":
    post:
      summary: Login Refresh
      operationId: login_refresh_login_refresh_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RefreshRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/question":
    get:
      summary: Questions
      operationId: questions_question_get
      parameters:
      - required: true
        schema:
          title: Sessiontoken
          type: string
        name: sessionToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Questions Question Get
                type: array
                items:
                  "$ref": "#/components/schemas/QuestionListItem"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/question/{questionID}":
    get:
      summary: Questions
      operationId: questions_question__questionID__get
      parameters:
      - required: true
        schema:
          title: Questionid
          type: string
          format: uuid
        name: questionID
        in: path
      - required: true
        schema:
          title: Sessiontoken
          type: string
        name: sessionToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Question"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/answer":
    post:
      summary: Questions
      operationId: questions_answer_post
      parameters:
      - required: true
        schema:
          title: Sessiontoken
          type: string
        name: sessionToken
        in: query
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAnswerRequest"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAnswerRequest"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Assertion:
      title: Assertion
      required:
      - assertion
      - message
      type: object
      properties:
        assertion:
          title: Assertion
          type: string
        message:
          title: Message
          type: string
      example:
        assertion: "'+' in code"
        message: 加算が行われていない可能性があります
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    LoginRequest:
      title: LoginRequest
      required:
      - displayID
      - password
      type: object
      properties:
        displayID:
          title: Displayid
          type: string
        password:
          title: Password
          type: string
      example:
        displayID: IamTestUser0123
        password: x0D32SaAi#5
    LoginResponse:
      title: LoginResponse
      required:
      - sessionToken
      - refreshToken
      type: object
      properties:
        sessionToken:
          title: Sessiontoken
          type: string
        refreshToken:
          title: Refreshtoken
          type: string
      example:
        sessionToken: "(JWT)"
        refreshToken: "(JWT)"
    Question:
      title: Question
      required:
      - questionID
      - title
      - description
      - testCases
      - assertions
      - answeredCorrectly
      type: object
      properties:
        questionID:
          title: Questionid
          type: string
          format: uuid
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
        testCases:
          title: Testcases
          type: array
          items:
            "$ref": "#/components/schemas/TestCase"
        assertions:
          title: Assertions
          type: array
          items:
            "$ref": "#/components/schemas/Assertion"
        answeredCorrectly:
          title: Answeredcorrectly
          type: boolean
      example:
        questionID: 2f644942-e039-4a1c-aab2-bfb8d67d5ff9
        title: add 2 value
        description: 2つの値が与えられると、それらの値を足し合わせた数字を返す関数 `add` を定義してください。
        testCases:
        - input: add(0, 0)
          expected: '0'
        - input: add(1, 1)
          expected: '2'
        - input: add(1.0, 1.0)
          expected: '2.0'
        - input: add(-1, 1)
          expected: '0'
        - input: add(-2, 1)
          expected: "-1"
        assertions:
        - assertion: "'+' in code"
          message: 加算が行われていない可能性があります
        - assertion: add(0, 0) === undefined
          message: 値が返却されていない可能性があります
        answeredCorrectly: false
    QuestionListItem:
      title: QuestionListItem
      required:
      - questionID
      - title
      - answeredCorrectly
      type: object
      properties:
        questionID:
          title: Questionid
          type: string
          format: uuid
        title:
          title: Title
          type: string
        answeredCorrectly:
          title: Answeredcorrectly
          type: boolean
      example:
        questionID: 2f644942-e039-4a1c-aab2-bfb8d67d5ff9
        title: add 2 value
        answeredCorrectly: false
    RefreshRequest:
      title: RefreshRequest
      required:
      - refreshToken
      type: object
      properties:
        refreshToken:
          title: Refreshtoken
          type: string
      example:
        refreshToken: "(JWT)"
    TestCase:
      title: TestCase
      required:
      - input
      - expected
      type: object
      properties:
        input:
          title: Input
          type: string
        expected:
          title: Expected
          type: string
      example:
        input: add(1, 2)
        expected: '3'
    UserAnswerRequest:
      title: UserAnswerRequest
      required:
      - questionID
      - isCorrect
      type: object
      properties:
        questionID:
          title: Questionid
          type: string
          format: uuid
        isCorrect:
          title: Iscorrect
          type: boolean
      example:
        questionID: 2f644942-e039-4a1c-aab2-bfb8d67d5ff9
        isCorrect: false
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
